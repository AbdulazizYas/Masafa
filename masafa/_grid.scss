@use "sass:math";



// -----base layout classes

.container-full,
.container{
  @include create-container();
}

// create breakpoints containers
@each $bp, $max-width in $container-max-widths{
  .container-#{$bp}{
    @extend .container-full;
  }

  @include breakpoint(map-get($breakpoints, $bp)){

    %responsive-container-#{$bp}{
      max-width: $max-width;
    }

    $extend-bp: true;

    @each $bp-name, $width in $breakpoints{
      @if ($extend-bp){
        .container#{breakpoint-infix($bp-name)}{
          @extend %responsive-container-#{$bp};
        }


        @if ($bp-name == $bp){
          $extend-bp: false;
        }
      }
      
    }
  }
}


.row{
  display: flex;
  flex-flow: row wrap;
}

.center{
  display: flex;
  justify-content: center;
  align-items: center;
}

// generate grid gaps
@each $k , $v in $grid-gaps{

  .gap-#{$k} > *{
    padding: $v;
  }

  .gap-#{$k}{
    margin-left: -$v;
    margin-right: -$v;
  }
}


// col classes
@include xs{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xs{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-sm{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-md{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-lg{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xl{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xxl{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xxl{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}