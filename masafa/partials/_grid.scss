@use "sass:math";
$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
  "4": 40px,
);

$flex-values: flex-start, flex-end, space-between, space-around, space-evenly, center;

// base layout classes
.container{
  width: 100%;
  max-width: 1200px;
  padding: 0 20px;
  margin: 0 auto;
  box-sizing: border-box;
}

.row{
  display: flex;
  flex-flow: row wrap;
}

.center{
  display: flex;
  justify-content: center;
  align-items: center;
}
// generate grid gaps
@each $k , $v in $grid-gaps{

  .gap-#{$k} > *{
    padding: $v;
  }

  .gap-#{$k}{
    margin-left: -$v;
    margin-right: -$v;
  }
}


// justify content classes
@each $val in $flex-values{
  .justify-#{$val}{
    justify-content: $val;
  }
}

// align items classes
@each $val in $flex-values{
  .align-#{$val}{
    align-items: $val;
  }
}

// col classes
@include xs{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xs{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-sm{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-md{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-lg{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include xl{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xl{
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}